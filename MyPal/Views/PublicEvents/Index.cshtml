@using Microsoft.AspNetCore.Identity
@inject SignInManager<IdentityUser> SignInManager
@inject UserManager<IdentityUser> UserManager
@inject RoleManager<IdentityRole> RoleManager

@model MyPal.Models.CollectionDataModel
@{
    ViewData["Title"] = "Map View";
}

<!-- Map -->
<div id="map"></div>
<br>

<div class="container">
    <button type="button" class="btn btn-primary" onclick="GetAllPinpoints()">View Pinpoints</button>
    <button type="button" class="btn btn-primary" onclick="GetPinpointsOfTodaysEvents()">View Today's Events</button>
</div>


<div class="container mt-2" id="radio-buttons">
    <h3 class="text-primary" id="status">No Overlay</h3>
    <form name="level-selector">
        <div class="form-check">
            <input class="form-check-input" type="radio" name="level" id="no-overlay" checked="checked" value="no overlay">
            <label class="form-check-label" for="no-overlay">
                No overlay
            </label>
        </div>
        <div class="form-check">
            <input class="form-check-input" type="radio" name="level" id="level -2" value="Level -2">
            <label class="form-check-label" for="level -2">
                Level -2 Parking
            </label>
        </div>

        <div class="form-check">
            <input class="form-check-input" type="radio" name="level" id="level -1" value="Level -1">
            <label class="form-check-label" for="level -1">
                Level -1
            </label>
        </div>

        <div class="form-check">
            <input class="form-check-input" type="radio" name="level" id="level 0" value="Level 0">
            <label class="form-check-label" for="level 0">
                Level 0
            </label>
        </div>

        <div class="form-check">
            <input class="form-check-input" type="radio" name="level" id="level 1" value="Level 1">
            <label class="form-check-label" for="level 1">
                Level 1
            </label>
        </div>
    </form>

    <br >

    <div id="navigation">
        <video id="preview" width="500" height="400" hidden></video>
        <form id="GetNavigation" class="form">
            <input id="TurnOnCamera" type="button" class="btn btn-outline-secondary" value="Present QR Code" onclick="turnOnCamera();" />

            <input id="startPointName" type="text" name="startpoint" />
            <input id="endPointName" type="text" name="endpoint" />
            
            <input id="startId" type="hidden" />
            <input id="endId" type="hidden" />
            <input type="button" class = "btn btn-outline-secondary" value="Get Navigation" onclick="RetreiveNavigation();" />
        </form>
        
        <form id="UpdateNavigation" hidden>
            <p>Input new QR Code to Update the Navigation</p>
            <input id="TurnOnCameraAgain" type="button"  value="Present QR Code" onclick="turnOnCamera();" />
            <input type="button" value="Update Navigation" onclick="RetreiveNavigation();" />
            <br/>
            <input type="button" value="Reset Navigation" onclick="ResetNavigation();" />
        </form>
        <div id="pastePath"></div>
    </div>
</div>

<div class="container mb-5">
    <div class="row pt-4">
        <div class="col-6">
            <h2 class="text-primary">Upcoming Public Events</h2>
        </div>
    </div>

    <!--Validation to check if the table has any content-->
    @if (Model.PublicEventsList.Count() > 0)
    {

        @foreach (var obj in Model.PublicEventsList)
        {
            <table class="table table-bordered border-primary table-striped table-responsive" style="block-size:100%">
                <thead>
                    <tr>
                        <th>
                            Event Id
                        </th>

                        <th>
                            Event name
                        </th>

                        <th>
                            Event description
                        </th>

                        <th>
                            Start time
                        </th>

                        <th>
                            End time
                        </th>

                        <th>
                            Capacity
                        </th>

                        <th>
                            PinPoint id
                        </th>
                    </tr>
                </thead>
                <tbody>
                    <tr>
                        <td width="30%">@obj.Id</td>
                        <td width="30%">@obj.Name</td>
                        <td width="40%">@obj.Description</td>
                        <td width="50%">@obj.StartTime</td>
                        <td width="50%">@obj.EndTime</td>
                        <td width="50%">@obj.Capacity</td>
                        <td width="50%">@obj.PinpointId</td>
                    </tr>

                </tbody>
            </table>
            <p>Current event attendance for event @obj.Name: @obj.Attendance</p>
            @if (User.IsInRole("User"))
            {

                Model.AlreadyAttending = false;
                foreach (var element in Model.PublicEventAttendances)
                {
                    if (element.PublicEventId == obj.Id)
                    {
                        Model.AlreadyAttending = true;
                    }
                }
                if ((obj.Attendance >= obj.Capacity) && Model.AlreadyAttending == false)
                {
                    <p>Unfortunately, the event is fully booked (Boohoo)</p>
                }
                else if (Model.AlreadyAttending == false)
                {
                    <form method="post" asp-controller="PublicEvents" asp-route-Id="@obj.Id" asp-route-UserId="@Model.CurrentUserId" asp-action="AttendEvent">
                        <input type="submit" class="btn btn-primary mb-1 mr-1" value="Attend Event" />
                    </form>
                }
                else
                {
                    <p>Your attendance has already been notified for this event!</p>
                }





            }
            @if (User.IsInRole("Admin"))
            {
                <div style="margin:10px">
                    <a asp-controller="PublicEvents" asp-route-Id="@obj.Id" asp-action="Edit" class="btn btn-primary">
                        Edit
                    </a>
                    <a asp-controller="PublicEvents" asp-route-Id="@obj.Id" asp-action="Delete" class="btn btn-dark">
                        Delete
                    </a>
                </div>
            }
        }

    }
    else
    {
        <!--In case that the table is empty-->
        <h6 class="text-secondary">There are no public events available at the moment. Please wait for an admin to add an upcoming public event.</h6>
    }
    @if (User.IsInRole("Admin"))
    {
        <div class="col-6 text-left">
            <a asp-controller="PublicEvents" asp-action="Create" class="btn btn-primary"> Create new public event.</a>
        </div>
    }

</div>




